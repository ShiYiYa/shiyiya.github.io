<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  <icon>http://shiyiya.github.io/icon.png</icon>
  
  <link href="http://shiyiya.github.io/atom.xml" rel="self"/>
  
  <link href="http://shiyiya.github.io/"/>
  <updated>2021-01-27T05:07:20.249Z</updated>
  <id>http://shiyiya.github.io/</id>
  
  <author>
    <name>shiyi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>promise</title>
    <link href="http://shiyiya.github.io/promise/"/>
    <id>http://shiyiya.github.io/promise/</id>
    <published>2019-05-30T00:00:00.000Z</published>
    <updated>2021-01-27T05:07:20.249Z</updated>
    
    
    <summary type="html">&lt;p&gt;todo&lt;/p&gt;</summary>
    
    
    
    
    <category term="promise" scheme="http://shiyiya.github.io/tags/promise/"/>
    
  </entry>
  
  <entry>
    <title>初探 Progressive Web App</title>
    <link href="http://shiyiya.github.io/pwa/"/>
    <id>http://shiyiya.github.io/pwa/</id>
    <published>2019-05-18T00:00:00.000Z</published>
    <updated>2021-01-27T05:07:20.249Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;它是什么-？&quot;   &gt;
          &lt;a href=&quot;#它是什么-？&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#它是什么-？&quot; class=&quot;headerlink&quot; title=&quot;它是什么 ？&quot;&gt;&lt;/a&gt;它是什么 ？&lt;/h2&gt;
      &lt;p&gt;Progressive Web App, 简称 PWA，是提升 Web App 的体验的一种新方法，能给用户（类）原生应用的体验。&lt;/p&gt;
&lt;p&gt;PWA 的主要特点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可靠 - 即使在不稳定的网络环境下，也能瞬间加载并展现&lt;/li&gt;
&lt;li&gt;体验 - 快速响应，并且有平滑的动画响应用户的操作&lt;/li&gt;
&lt;li&gt;粘性 - 像设备上的原生应用，具有沉浸式的用户体验，用户可以添加到桌面&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="pwa" scheme="http://shiyiya.github.io/tags/pwa/"/>
    
  </entry>
  
  <entry>
    <title>redux-to-simple</title>
    <link href="http://shiyiya.github.io/redux-to-simple/"/>
    <id>http://shiyiya.github.io/redux-to-simple/</id>
    <published>2019-03-12T14:42:00.000Z</published>
    <updated>2021-01-27T05:07:20.249Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;   &gt;
          &lt;a href=&quot;#前言&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;
      &lt;p&gt;在 React 组件中，大部分组件或多或少都会需要一下 &lt;code&gt;状态&lt;/code&gt;, 来维持 &amp;amp; 切换自身的 UI 状态, 他可能是自身的 State, 也许是外部传递的 Props, 都可以作为自身 UI 的一个切换的控制开关。&lt;/p&gt;
&lt;p&gt;整个数据流都是从上至下的单项数据流（State -&amp;gt; Props),&lt;/p&gt;</summary>
    
    
    
    
    <category term="react-redux" scheme="http://shiyiya.github.io/tags/react-redux/"/>
    
    <category term="react" scheme="http://shiyiya.github.io/tags/react/"/>
    
    <category term="redux" scheme="http://shiyiya.github.io/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>Classical inheritance in JavaScript ES5</title>
    <link href="http://shiyiya.github.io/Classical-inheritance-in-JavaScript-ES5/"/>
    <id>http://shiyiya.github.io/Classical-inheritance-in-JavaScript-ES5/</id>
    <published>2018-12-25T00:00:00.000Z</published>
    <updated>2021-01-27T05:07:20.249Z</updated>
    
    
    <summary type="html">&lt;p&gt;在 JavaScript 中，最让人困扰的几根莫过于 this、闭包、作用域、原型链，而却常常看又常常忘，最近又看了一下高程感觉清晰了很多，于是就想写在这里（水一篇文章）。&lt;/p&gt;</summary>
    
    
    
    
    <category term="es5-extends" scheme="http://shiyiya.github.io/tags/es5-extends/"/>
    
  </entry>
  
  <entry>
    <title>how-to-set-correctly-font-family</title>
    <link href="http://shiyiya.github.io/how-to-set-correctly-font-family/"/>
    <id>http://shiyiya.github.io/how-to-set-correctly-font-family/</id>
    <published>2018-09-27T00:00:00.000Z</published>
    <updated>2021-01-27T05:07:20.249Z</updated>
    
    
    <summary type="html">&lt;p&gt;在不同操作系统、不同游览器里面默认显示的字体是不一样的，为了保持各个平台渲染效果保持一致或者使得显示效果更好，我们就需要设置好 font-family。&lt;/p&gt;
&lt;p&gt;根据 font-family 的原则,假如客户终端不认识前面的字体,就自动切换到第二种字体,第二种不认识就切换到第三种,以此类推.假如都不能识别就调用默认字体 。&lt;br&gt;每个人的审美都不一样，所钟爱的字体可能也有所不同，这里是本站所使用的 font-family：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;div class=&quot;table-container&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 1 */&lt;/span&gt; -apple-system, BlinkMacSystemFont, &lt;span class=&quot;comment&quot;&gt;/* 2 */&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;PingFang SC&amp;#x27;&lt;/span&gt;, Arial, &lt;span class=&quot;string&quot;&gt;&amp;#x27;Microsoft YaHei&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 3 */&lt;/span&gt; Lato, sans-serif;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="web-font-family" scheme="http://shiyiya.github.io/tags/web-font-family/"/>
    
  </entry>
  
  <entry>
    <title>我的 Webpack（4）升级指南</title>
    <link href="http://shiyiya.github.io/migration-guide-for-webpck4/"/>
    <id>http://shiyiya.github.io/migration-guide-for-webpck4/</id>
    <published>2018-09-20T00:00:00.000Z</published>
    <updated>2021-01-27T05:07:20.249Z</updated>
    
    
    <summary type="html">&lt;p&gt;全新的 webpack（4）来了，带来了全新的特性，更快的性能，更少的配置，先来升级踩波坑吧！&lt;/p&gt;</summary>
    
    
    
    
    <category term="webpck4" scheme="http://shiyiya.github.io/tags/webpck4/"/>
    
  </entry>
  
  <entry>
    <title>Do something interesting with JS</title>
    <link href="http://shiyiya.github.io/Do-something-interesting-with-JS/"/>
    <id>http://shiyiya.github.io/Do-something-interesting-with-JS/</id>
    <published>2018-06-30T10:51:10.000Z</published>
    <updated>2021-01-27T05:07:20.249Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;离开和进入页面时改变-title&quot;   &gt;
          &lt;a href=&quot;#离开和进入页面时改变-title&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#离开和进入页面时改变-title&quot; class=&quot;headerlink&quot; title=&quot;离开和进入页面时改变 title&quot;&gt;&lt;/a&gt;离开和进入页面时改变 title&lt;/h2&gt;
      &lt;p&gt;利用 Page Visibility，该规范定义了一种用于站点开发人员以编程方式确定页面的当前可见性状态以便开发功率和 CPU 高效的 Web 应用程序的手段。&lt;/p&gt;</summary>
    
    
    
    
    <category term="JS" scheme="http://shiyiya.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>JS 中的深 &amp; 浅拷贝</title>
    <link href="http://shiyiya.github.io/js-shallow-copy-and-deep-copy/"/>
    <id>http://shiyiya.github.io/js-shallow-copy-and-deep-copy/</id>
    <published>2018-06-30T00:00:00.000Z</published>
    <updated>2021-01-27T05:07:20.249Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;浅复制和深复制的区别？&quot;   &gt;
          &lt;a href=&quot;#浅复制和深复制的区别？&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#浅复制和深复制的区别？&quot; class=&quot;headerlink&quot; title=&quot;浅复制和深复制的区别？&quot;&gt;&lt;/a&gt;浅复制和深复制的区别？&lt;/h2&gt;
      &lt;ul&gt;
&lt;li&gt;浅复制（shallow copy）：只复制指向某个对象的指针，而不复制对象本身，新旧对象 u 共享一块内存；&lt;/li&gt;
&lt;li&gt;深复制（deep copy）：复制并创建一个一摸一样的对象，不共享内存，修改新对象，旧对象保持不变。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即最大的区别在于，复制过程中的值是否为引用传值。&lt;/p&gt;</summary>
    
    
    
    
    <category term="JS" scheme="http://shiyiya.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>理解 React-Redux</title>
    <link href="http://shiyiya.github.io/hello-redux/"/>
    <id>http://shiyiya.github.io/hello-redux/</id>
    <published>2018-05-22T00:00:00.000Z</published>
    <updated>2021-01-27T05:07:20.249Z</updated>
    
    
    <summary type="html">&lt;p&gt;Redux 是 JavaScript 状态容器，提供可预测化的状态管理。&lt;br&gt;React-Redux 用于连接 React、Redux。&lt;/p&gt;</summary>
    
    
    
    
    <category term="react-redux" scheme="http://shiyiya.github.io/tags/react-redux/"/>
    
  </entry>
  
  <entry>
    <title>hello webpack with react</title>
    <link href="http://shiyiya.github.io/hello-webpack-with-react/"/>
    <id>http://shiyiya.github.io/hello-webpack-with-react/</id>
    <published>2018-01-27T00:00:00.000Z</published>
    <updated>2021-01-27T05:07:20.249Z</updated>
    
    
    <summary type="html">&lt;p&gt;虽然 React 官方有提供一个 create-react-app 的脚手架，并给出了各种在开发过程中需要的扩展配置文档：比如如果你想用 sass，它会教你怎么做，不知道如何部署，它也告诉你了；甚至还告诉你如何用 prettier 去 lint 代码；但本着折腾的精神，也来小小实现一番。&lt;/p&gt;</summary>
    
    
    
    
    <category term="webpack" scheme="http://shiyiya.github.io/tags/webpack/"/>
    
    <category term="react" scheme="http://shiyiya.github.io/tags/react/"/>
    
  </entry>
  
</feed>
